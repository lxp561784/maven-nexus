<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>maven-parent</artifactId>
    <groupId>org.sonatype.mavenbook</groupId>
    <version>0.0.1-SNAPSHOT</version>
    <relativePath>..</relativePath>
  </parent>
  <artifactId>maven-service</artifactId>
  <name>maven-service</name>
  
   <properties>
  	<spring.version>3.0.5.RELEASE</spring.version>
  	<!-- jdbc -->
		<jdbc.driver.groupId>mysql</jdbc.driver.groupId>
		<jdbc.driver.artifactId>mysql-connector-java</jdbc.driver.artifactId>
		<jdbc.driver.version>5.1.27</jdbc.driver.version>
  </properties>
  
  <dependencies>
	<!-- LOGGING begin -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.5.8</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.5.8</version>
		</dependency>
 		<dependency> 
			<groupId>org.slf4j</groupId> 
 			<artifactId>jcl-over-slf4j</artifactId> 
 			<version>1.5.8</version>
 		</dependency> 
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
		</dependency>
	<!-- LOGGING end -->
	<!-- hibernate start-->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>3.6.8.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-annotations</artifactId>
			<version>3.4.0.GA</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-commons-annotations</artifactId>
			<version>3.2.0.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>3.4.0.GA</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>3.1.0.GA</version>
		</dependency>
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate</artifactId>
			<version>3.3.2</version>
		</dependency>
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>1.1</version>
		</dependency>
			<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>1.2.3</version>
		</dependency>
		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>1.6.1</version>
		</dependency>
	<!-- hibernate end-->
	<!-- spring data access spring和hibernate整合需要 extends HibernateDaoSupport -->
<!-- 		<dependency> -->
<!-- 			<groupId>org.springframework.data</groupId> -->
<!-- 			<artifactId>spring-data-jpa</artifactId> -->
<!-- 			<version>${spring-data-jpa.version}</version> -->
<!-- 			<exclusions> -->
<!-- 				<exclusion> -->
<!-- 					<groupId>junit</groupId> -->
<!-- 					<artifactId>junit-dep</artifactId> -->
<!-- 				</exclusion> -->
<!-- 			</exclusions> -->
<!-- 		</dependency> -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>3.1.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
	<!-- spring data access spring和hibernate整合需要 -->
		<!-- jdbc driver -->
		<dependency>
			<groupId>${jdbc.driver.groupId}</groupId>
			<artifactId>${jdbc.driver.artifactId}</artifactId>
			<version>${jdbc.driver.version}</version>
			<scope>runtime</scope>
		</dependency>
		<!-- datasource -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.0.0</version>
		</dependency>
		<!-- datasource -->
  </dependencies>
  	<build>
        <plugins>
        	 <plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.5</version>
					<configuration>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.2</version>
					<configuration>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
        </plugins>
        <resources>
	  		<resource>
	  			<directory>src/main/resources</directory>
	  			<filtering>false</filtering>
	  		</resource>
  		</resources>
     </build>
     <!-- 
     <profiles>
      自动根据JVM参数启用profile，替换不同环境的资源 mvn -Pproduct -Dproject.install.phase=product 
     	<profile>
     		<id>product</id>
     		 <activation> 
                 <property> 
                    <name>project.install.phase</name> 
                </property> 
             </activation> 
     		<build>
					<resources>
						<resource>
							<directory>src/main/resources</directory>
							 properties 和xml可以使用${}获取系统属性和项目属性值。还可以获取filters中添加的properties中的值。如下面
							<filtering>true</filtering>
						</resource>
					</resources>
					<filters>
					 把jdbc.properties加入到项目属性中 spring。xml配置中可以获取到jdbc属性
				       	<filter>
				       		config/${project.install.phase}/jdbc.properties
				       	</filter>
					</filters>
				</build>
				 在properties中可以使用${dev.mode}获取值
				<properties>
			        <dev.mode>true</dev.mode>
			        <env.spring.application.file>
			            classpath*:/application.local.properties
			        </env.spring.application.file>
			    </properties>
			    
     	</profile>
     </profiles>
     -->
</project>